{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar debug = require('debug')('express-urlrewrite');\n\nvar toRegexp = require('path-to-regexp');\n\nvar URL = require('url');\n/**\n * Expose `expose`.\n */\n\n\nmodule.exports = rewrite;\n/**\n * Rewrite `src` to `dst`.\n *\n * @param {String|RegExp} src\n * @param {String} dst\n * @return {Function}\n * @api public\n */\n\nfunction rewrite(src, dst) {\n  var keys = [],\n      re,\n      map;\n\n  if (dst) {\n    re = toRegexp(src, keys);\n    map = toMap(keys);\n    debug('rewrite %s -> %s    %s', src, dst, re);\n  } else {\n    debug('rewrite current route -> %s', src);\n  }\n\n  return function (req, res, next) {\n    var orig = req.url;\n    var m;\n\n    if (dst) {\n      m = re.exec(orig);\n\n      if (!m) {\n        return next();\n      }\n    }\n\n    req.url = req.originalUrl = (dst || src).replace(/\\$(\\d+)|(?::(\\w+))/g, function (_, n, name) {\n      if (name) {\n        if (m) return m[map[name].index + 1];else return req.params[name];\n      } else if (m) {\n        return m[n];\n      } else {\n        return req.params[n];\n      }\n    });\n    debug('rewrite %s -> %s', orig, req.url);\n\n    if (req.url.indexOf('?') > 0) {\n      req.query = URL.parse(req.url, true).query;\n      debug('rewrite updated new query', req.query);\n    }\n\n    if (dst) next();else next('route');\n  };\n}\n/**\n * Turn params array into a map for quick lookup.\n *\n * @param {Array} params\n * @return {Object}\n * @api private\n */\n\n\nfunction toMap(params) {\n  var map = {};\n  params.forEach(function (param, i) {\n    param.index = i;\n    map[param.name] = param;\n  });\n  return map;\n}","map":null,"metadata":{},"sourceType":"script"}