{"ast":null,"code":"import _objectSpread from \"/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\"; // import { bodyParser } from \"json-server\";\n\nfunction AccountContainer() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactions = _useState2[0],\n      setTransactions = _useState2[1];\n\n  function postData(newTrans) {\n    setTransactions(_objectSpread({}, transactions, {\n      newTrans: newTrans\n    }));\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      body: JSON.stringify(newTrans),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(JSON.stringify(newTrans));\n  }\n\n  function searchData(search) {\n    if (search === \"\") {\n      getTransactions(transactions);\n    } else {\n      var searchTrans = transactions.filter(function (transaction) {\n        return transaction.description.toLowerCase().includes(search.toLowerCase());\n      });\n      setTransactions(searchTrans);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    searchData: searchData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddTransactionForm, {\n    submitTransaction: postData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionsList, {\n    transactions: transactions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default AccountContainer;","map":{"version":3,"names":["React","useEffect","useState","TransactionsList","Search","AddTransactionForm","AccountContainer","transactions","setTransactions","postData","newTrans","fetch","method","body","JSON","stringify","headers","console","log","searchData","search","getTransactions","searchTrans","filter","transaction","description","toLowerCase","includes"],"sources":["/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n// import { bodyParser } from \"json-server\";\n\nfunction AccountContainer() {\n\n  const [transactions, setTransactions] = useState({})\n  \n  function postData(newTrans){\n    setTransactions({...transactions, newTrans})\n    fetch (\"http://localhost:8001/transactions\", {\n    method: \"POST\",\n    body: JSON.stringify(newTrans),\n    headers: {\n      \"Content-Type\": \"application/json\"}\n    })\n    console.log(JSON.stringify(newTrans))\n  }\n  \n  function searchData(search){\n    if (search === \"\"){\n      getTransactions(transactions)\n    }else {\n      const searchTrans = transactions.filter(transaction => {\n        return transaction.description.toLowerCase().includes(search.toLowerCase())\n      })\n      setTransactions(searchTrans)\n    }\n  }\n\n  return (\n    <div>\n      <Search searchData={searchData} />\n      <AddTransactionForm submitTransaction={postData} />\n      <TransactionsList transactions={transactions}/>\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B,C,CACA;;AAEA,SAASC,gBAAT,GAA4B;EAAA,gBAEcJ,QAAQ,CAAC,EAAD,CAFtB;EAAA;EAAA,IAEnBK,YAFmB;EAAA,IAELC,eAFK;;EAI1B,SAASC,QAAT,CAAkBC,QAAlB,EAA2B;IACzBF,eAAe,mBAAKD,YAAL;MAAmBG,QAAQ,EAARA;IAAnB,GAAf;IACAC,KAAK,CAAE,oCAAF,EAAwC;MAC7CC,MAAM,EAAE,MADqC;MAE7CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAFuC;MAG7CM,OAAO,EAAE;QACP,gBAAgB;MADT;IAHoC,CAAxC,CAAL;IAMAC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAZ;EACD;;EAED,SAASS,UAAT,CAAoBC,MAApB,EAA2B;IACzB,IAAIA,MAAM,KAAK,EAAf,EAAkB;MAChBC,eAAe,CAACd,YAAD,CAAf;IACD,CAFD,MAEM;MACJ,IAAMe,WAAW,GAAGf,YAAY,CAACgB,MAAb,CAAoB,UAAAC,WAAW,EAAI;QACrD,OAAOA,WAAW,CAACC,WAAZ,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CP,MAAM,CAACM,WAAP,EAA/C,CAAP;MACD,CAFmB,CAApB;MAGAlB,eAAe,CAACc,WAAD,CAAf;IACD;EACF;;EAED,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,UAAU,EAAEH,UAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,kBAAD;IAAoB,iBAAiB,EAAEV,QAAvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE,oBAAC,gBAAD;IAAkB,YAAY,EAAEF,YAAhC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,CADF;AAOD;;AAED,eAAeD,gBAAf"},"metadata":{},"sourceType":"module"}