{"ast":null,"code":"import _slicedToArray from \"/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js\";\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from 'uuid';\n\nfunction AddTransactionForm(_ref) {\n  var submitTransaction = _ref.submitTransaction;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      amount = _useState4[0],\n      setAmount = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      category = _useState8[0],\n      setCategory = _useState8[1];\n\n  var handleDescriptionChange = function handleDescriptionChange(event) {\n    setDescription(event.target.value);\n  };\n\n  var handleAmountChange = function handleAmountChange(event) {\n    setAmount(event.target.value);\n  };\n\n  var handleDateChange = function handleDateChange(event) {\n    setDate(event.target.value);\n  };\n\n  var handleCategoryChange = function handleCategoryChange(event) {\n    setCategory(event.target.value);\n  }; // const [formDetails, setFormDetails] = useState({\n  //   date:\"\",\n  //   description:\"\",\n  //   category:\"\",\n  //   amount:0\n  // })\n\n\n  function changeData() {\n    //   setFormDetails({...formDetails, [event.target.name]:event.target.value})\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newTransaction)\n    });\n  }\n\n  function submitData(event) {\n    event.preventDefault();\n    var newTransaction = {\n      id: uuid(),\n      date: date,\n      description: description,\n      category: category,\n      amount: amount\n    }; //   submitTransaction(formDetails)\n    //      setFormDetails({\n    //       date:\"\",\n    //       description:\"\",\n    //       category:\"\",\n    //       amount:0\n    //     })\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inline fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: date,\n    type: \"date\",\n    name: \"date\",\n    onChange: handleDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: description,\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"Description\",\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: category,\n    type: \"text\",\n    name: \"category\",\n    placeholder: \"Category\",\n    onChange: handleCategoryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: amount,\n    type: \"number\",\n    name: \"amount\",\n    placeholder: \"Amount\",\n    step: \"0.01\",\n    onChange: handleAmountChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ui button\",\n    type: \"submit\",\n    onClick: changeData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Add Transaction\")));\n}\n\nexport default AddTransactionForm;","map":{"version":3,"names":["React","useState","v4","uuid","AddTransactionForm","submitTransaction","description","setDescription","amount","setAmount","date","setDate","category","setCategory","handleDescriptionChange","event","target","value","handleAmountChange","handleDateChange","handleCategoryChange","changeData","fetch","method","headers","body","JSON","stringify","newTransaction","submitData","preventDefault","id"],"sources":["/home/moringa/Development/code/phase-2/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AddTransactionForm.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport { v4 as uuid } from 'uuid'\n\nfunction AddTransactionForm({submitTransaction}) {\n  \n  const [description, setDescription] = useState('')\n  const [amount, setAmount] = useState('')\n  const [date, setDate] = useState('')\n  const [category, setCategory] = useState('')\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value)\n  }\n\n  const handleAmountChange = (event) => {\n    setAmount(event.target.value)\n  }\n\n  const handleDateChange = (event) => {\n    setDate(event.target.value)\n  }\n\n  const handleCategoryChange = (event) => {\n    setCategory(event.target.value)\n  }\n\n// const [formDetails, setFormDetails] = useState({\n//   date:\"\",\n//   description:\"\",\n//   category:\"\",\n//   amount:0\n// })\n\nfunction changeData(){\n//   setFormDetails({...formDetails, [event.target.name]:event.target.value})\nfetch (\"http://localhost:8001/transactions\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"},\n      body: JSON.stringify(newTransaction)\n    })\n}\n\nfunction submitData(event){\n  event.preventDefault();\n\nconst newTransaction = {id:uuid(), date: date, description: description, category: category, amount: amount}\n\n\n//   submitTransaction(formDetails)\n//      setFormDetails({\n//       date:\"\",\n//       description:\"\",\n//       category:\"\",\n//       amount:0\n//     })\n}\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\">\n        <div className=\"inline fields\">\n          <input value= {date} type=\"date\" name=\"date\" onChange={handleDateChange} />\n          <input value= {description} type=\"text\" name=\"description\" placeholder=\"Description\" onChange={handleDescriptionChange} />\n          <input value= {category} type=\"text\" name=\"category\" placeholder=\"Category\" onChange={handleCategoryChange}/>\n          <input value= {amount} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" onChange={handleAmountChange} />\n        </div>\n        <button className=\"ui button\" type=\"submit\" onClick= {changeData}>\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}